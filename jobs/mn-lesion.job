#!/bin/bash

#SBATCH --nodes=3
#SBATCH --tasks-per-node=1
#SBATCH --cpus-per-task=48
#SBATCH --time=2:00:00
#SBATCH --account=mundi-ai
#SBATCH --mem-per-gpu=128G
#SBATCH --job-name=SSL-ibot-lesion
#SBATCH --partition=develbooster
#SBATCH --mail-type=end
#SBATCH --gres=gpu:4
#SBATCH --output=lesion-SSL-ibot-%j.out

cd /p/scratch/mundi-ai/code/ibot
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/p/software/juwelsbooster/stages/2024/software/Python/3.11.3-GCCcore-12.3.0/lib
module load Python/3.11.3
source /p/scratch/mundi-ai/dl/bin/activate
export MASTER_ADDR="$(scontrol show hostnames "$SLURM_JOB_NODELIST" | head -n 1)"
if [ "$SYSTEMNAME" = juwelsbooster ] \
       || [ "$SYSTEMNAME" = juwels ] \
       || [ "$SYSTEMNAME" = jurecadc ] \
       || [ "$SYSTEMNAME" = jusuf ]; then
    # Allow communication over InfiniBand cells on JSC machines.
    MASTER_ADDR="$MASTER_ADDR"i
fi

export MASTER_PORT=54123

# Prevent NCCL not figuring out how to initialize.
export NCCL_SOCKET_IFNAME=ib0
# Prevent GLOO not being able to communicate.
export GLOO_SOCKET_IFNAME=ib0

srun env -u CUDA_VISIBLE_DEVICES python -u -m torchrun_jsc --nproc_per_node=4 --nnodes 3 --rdzv_id="$SLURM_JOB_ID" --rdzv_endpoint="$MASTER_ADDR":"$MASTER_PORT" --rdzv_backend=c10d main_ibot.py --arch vit_base --output_dir ibot-dl-vit-b-lc-8 --lr 0.0001 --local_crops_number 8 --batch_size_per_gpu 92 --data_path /p/scratch/mundi-ai/DeepLesion --load_from /p/scratch/mundi-ai/code/ibot/ibot-dl-vit-b-lc-8/checkpoint.pth
